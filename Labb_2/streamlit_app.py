import streamlit as st
from Laboration2_film_recommender import load_data, combine_features, get_movie_recommendations_optimized

# Konfigurera Streamlit-sidan
st.set_page_config(
    page_title="Filmrekommendationssystem",
    page_icon="游꿟"
)

# Titel och beskrivning
st.title("Filmrekommendationssystem")
st.write("V칛lj en film f칬r att f친 rekommendationer p친 liknande filmer baserat p친 genrer och taggar.")

# Ladda data (med cache f칬r att undvika att ladda om data varje g친ng)
@st.cache_data
def load_app_data():
    with st.spinner("Laddar data..."):
        movies_df, tags_df, links_df = load_data()
        content_df = combine_features(movies_df, tags_df)
        return movies_df, content_df, links_df

# Ladda data
movies_df, content_df, links_df = load_app_data()

# Skapa en s칬kruta d칛r anv칛ndaren kan skriva in filmtitel
selected_movie = st.text_input("Skriv in en filmtitel:", "")

# Visa f칬rslag n칛r anv칛ndaren b칬rjar skriva
if selected_movie:
    # Filtrera filmer baserat p친 anv칛ndarens inmatning
    matching_movies = movies_df[movies_df['title'].str.contains(selected_movie, case=False)]['title'].tolist()
    
    if matching_movies:
        selected_movie = st.selectbox("V칛lj fr친n matchande filmer:", matching_movies)
    else:
        st.warning(f"Inga filmer matchade '{selected_movie}'. F칬rs칬k med en annan titel.")
        selected_movie = None

# Antal rekommendationer
num_recommendations = st.slider(
    "Antal rekommendationer:", 
    min_value=1, 
    max_value=10, 
    value=5
)

# L칛gg till en checkbox f칬r att filtrera bort filmer fr친n samma serie och anv칛nda PCA
filter_similar = st.checkbox(
    "Filtrera bort filmer fr친n samma serie", 
    value=True,
    help="Om markerad, anv칛nder systemet PCA f칬r att filtrera bort uppf칬ljare och filmer i samma serie"
)

# Anv칛nd PCA om filtreringen 칛r aktiverad
use_pca = filter_similar

# Anv칛nder fast v칛rde f칬r PCA-komponenter (10 칛r optimalt efter test)
n_components = 10  

# Knapp f칬r att generera rekommendationer
if st.button("Ge mig rekommendationer"):
    if selected_movie:
        with st.spinner("Ber칛knar rekommendationer..."):
            # H칛mta rekommendationer med den optimerade funktionen
            recommendations = get_movie_recommendations_optimized(
                selected_movie, 
                content_df,
                links_df, 
                num_recommendations=num_recommendations,
                filter_similar_titles=filter_similar,
                use_pca=use_pca,
                n_components=n_components
            )
        
        # Visa rekommendationer
        if isinstance(recommendations, str):
            st.error(recommendations)
        else:
            st.subheader(f"Baserat p친 '{selected_movie}', rekommenderar vi:")
            
            for i, rec in enumerate(recommendations, 1):
                st.write(f"{i}. **{rec['title']}**")
                st.write(f"   Genrer: {rec['genres']}")
                st.write(f"   Likhet: {rec['similarity']:.2f}")

                # Skapa l칛nkar till TMDB om ID:n finns
                if rec['tmdb_id'] is not None:
                    tmdb_url = f"https://www.themoviedb.org/movie/{rec['tmdb_id']}"
                    st.write(f"   [游꿘 TMDB]({tmdb_url})")

                st.write("---")
    else:
        st.warning("V칛lj en film f칬rst!")

# Visa information om projektet
with st.expander("Om projektet"):
    st.write("""
    Detta filmrekommendationssystem hj칛lper dig hitta filmer som liknar den du gillar.

    游댌 Hur det funkar:
    Systemet analyserar b친de filmens genrer och taggar som anv칛ndare lagt till. P친 s친 s칛tt f친r varje film en unik "profil" som g칬r det l칛ttare att hitta liknande filmer.
    
    Systemet j칛mf칬r sedan din valda film med andra filmer och visar de som 칛r mest lika.
    
    F칬r att ge dig mer varierade rekommendationer g친r det att automatiskt filtrera bort filmer fr친n samma serie.

    Tekniker som anv칛nds:
    - TF-IDF (Term Frequency-Inverse Document Frequency) f칬r att omvandla text till vektorer
    - Cosinus-likhet f칬r att m칛ta likhet mellan filmer
    - Optimerad ber칛kning som bara j칛mf칬r den valda filmen med andra filmer
    
    Datak칛lla: MovieLens dataset (ml-latest)
    """)
